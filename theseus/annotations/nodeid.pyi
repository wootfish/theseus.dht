from twisted.internet.defer import Deferred
from typing import Optional
from ..enums import IDCheckPriorities


class NodeID:
    def __init__(self, node_id: Optional[bytes], id_preimage: Optional[bytes], verify: bool, priority: IDCheckPriorities) -> None: ...
    def set_priority(self, new_priority: IDCheckPriorities) -> None: ...
    def generate_address(self, preimage: Optional[bytes]) -> None: ...
    def verify_address(self) -> None: ...
    @staticmethod
    def timestampIntToBytes(t: int) -> bytes: ...
    @staticmethod
    def _getHashInput() -> bytes: ...
